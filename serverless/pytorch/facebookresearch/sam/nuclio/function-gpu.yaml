# Copyright (C) 2023-2024 CVAT.ai Corporation
#
# SPDX-License-Identifier: MIT

metadata:
  name: pth-facebookresearch-sam-vit-h
  namespace: cvat
  annotations:
    name: Segment Anything
    version: 2
    type: interactor
    spec:
    framework: pytorch
    min_pos_points: 1
    min_neg_points: 0
    animated_gif: https://raw.githubusercontent.com/cvat-ai/cvat/develop/site/content/en/images/hrnet_example.gif
    help_message: The interactor allows to get a mask of an object using at least one positive, and any negative points inside it

spec:
  description: Interactive object segmentation with Segment-Anything
  runtime: 'python:3.10'
  handler: main:handler
  eventTimeout: 30s
  env:
    - name: PYTHONPATH
      value: /opt/nuclio/sam

  build:
    image: cvat.pth.facebookresearch.sam.vit_h:latest-gpu
    baseImage: pth_sam_custom:v1

    directives:
      preCopy:
      # set NVIDIA container runtime settings
        - kind: ENV
          value: NVIDIA_VISIBLE_DEVICES=all
        - kind: ENV
          value: NVIDIA_DRIVER_CAPABILITIES=compute,utility
      # disable interactive frontend
        - kind: ENV
          value: DEBIAN_FRONTEND=noninteractive
      # set workdir
        - kind: WORKDIR
          value: /opt/nuclio/sam
      ## install basic deps
      #  - kind: RUN
      #    value: sed -i 's/http:\/\/archive.ubuntu.com/http:\/\/mirrors.aliyun.com/g' /etc/apt/sources.list &&apt-get update && #apt-get -y install curl git python3 python3-pip ffmpeg libsm6 libxext6
      ## install sam deps
      #  - kind: RUN
      #    value: pip3 install torch torchvision torchaudio pycocotools matplotlib onnxruntime onnx
      # install sam code
        - kind: RUN
          value: pip3 install git+https://gitee.com/sutungpo/segment-anything.git
      # download sam weights
        - kind: RUN
          value: curl -o sam_vit_b_01ec64.pth https://download.cloud.189.cn/file/downloadFile.action?dt=51&expired=1717686742827&sk=af821855-dc18-4126-8fa0-f7d01f878f7e_app&ufi=323931138107987187&zyc=5&token=cloud14&sig=OsS7AC9KeIO6Bq3EcLP%2Fu0WC1eI%3D
      # map pip3 and python3 to pip and python
        - kind: RUN
          value: ln -s /usr/bin/pip3 /usr/local/bin/pip && ln -s /usr/bin/python3 /usr/bin/python
  triggers:
    myHttpTrigger:
      maxWorkers: 1
      kind: 'http'
      workerAvailabilityTimeoutMilliseconds: 10000
      attributes:
        maxRequestBodySize: 33554432 # 32MB
  resources:
    limits:
      nvidia.com/gpu: 1

  platform:
    attributes:
      restartPolicy:
        name: always
        maximumRetryCount: 3
      mountMode: volume
